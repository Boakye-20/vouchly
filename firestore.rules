rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own user document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }

    // Sessions collection rules
    match /sessions/{sessionId} {
      // Allow read if user is a participant
      allow read: if request.auth != null && 
        (resource.data.participantIds.hasAny([request.auth.uid]) || 
         request.auth.token.admin == true);
      
      // Allow create/update if user is a participant or admin
      allow create: if request.auth != null && 
        (request.resource.data.participantIds.hasAny([request.auth.uid]) || 
         request.auth.token.admin == true);
      
      allow update: if request.auth != null && 
        (resource.data.participantIds.hasAny([request.auth.uid]) || 
         request.auth.token.admin == true);
      
      // Only allow deletion by admins
      allow delete: if request.auth != null && request.auth.token.admin == true;
    }

    // Messages subcollection
    match /sessions/{sessionId}/messages/{messageId} {
      allow read: if request.auth != null && 
        (get(/databases/$(database)/documents/sessions/$(sessionId)).data.participantIds.hasAny([request.auth.uid]) ||
         request.auth.token.admin == true);
      
      allow create: if request.auth != null && 
        request.resource.data.senderId == request.auth.uid &&
        get(/databases/$(database)/documents/sessions/$(sessionId)).data.participantIds.hasAny([request.auth.uid]);
    }

    // User notifications
    match /users/{userId}/notifications/{notificationId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && 
        (request.resource.data.userId == userId || request.auth.token.admin == true);
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
